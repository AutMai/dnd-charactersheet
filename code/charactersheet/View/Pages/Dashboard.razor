@page "/dashboard"
@using Model.Entities
@using Domain.Repositories.Interfaces
@inject IApplicationUserRepository userRepository
@inject ICharacterRepository _characterRepository
@inject NavigationManager _navigationManager;
@attribute [Authorize]

<h2>My Characters</h2>

<DataInitializer Data="@_user">
    <ChildComponent>
        <div class="row">
            @foreach (var character in _user.Characters){
                <RadzenCard class="col-md-3" style="cursor: pointer;" @onclick="@(_ => _navigationManager.NavigateTo($"/character/{character.CharacterId}"))">
                    <h3 class="h5">@character.Name</h3>
                    <div>
                        <b>Race:</b> @(character.Race.Name)
                    </div>
                    <div>
                        <b>Class:</b> @(character.Class.Name)
                    </div>
                    <div>
                        <b>Level:</b> @(character.MaxHp)
                    </div>
                </RadzenCard>
            }
        </div>
    </ChildComponent>
</DataInitializer>


@code {

    [CascadingParameter]
    private Task<AuthenticationState> authStateTask { get; set; }

    ApplicationUser _user;

    protected override async Task OnParametersSetAsync(){
        var authState = await authStateTask;
        _user = (await userRepository.ReadGraphAsync(authState.User.Identity!.Name!))!;
    }

}